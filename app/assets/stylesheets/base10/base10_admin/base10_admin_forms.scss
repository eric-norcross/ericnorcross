// base10 SCSS Mixins
@import '../base10_scss_mixins/base10_mixins';

html {
  body#base10-admin {
    main {
      article.form {
        min-width: $siteMaxWidth;

        form {
          @include flex-direction(column);
          @include flex(1);
          
          min-width: min-content;

          :focus {
            outline: none;
            border-color: $valueSelected !important;
          }

          > .association-groups, 
          > .association-group {
            margin-bottom: rem(20);
          }
          
          .association-groups, .association-group {
            @include flex-direction(row);
            @include align-items(flex-start);
            @include justify-content(space-between);

            background-color: $light;
            border-color: $mediumLight; 
            border-radius: rem(5);
            border-width: rem(2);
            min-width: min-content;

            overflow: hidden;

            // .controls {
            //   display: none;
            // }

            .legend, .buttons, .controls {
              @include justify-content(flex-start);
              @include align-self(stretch);
              @include flex(0 1 rem(100));
              @include order(-1);

              background-color: $mediumLight;
              color: $neutral;
              font: $headerFontLight;
              min-width: min-content;
              padding: rem(10);
              text-transform: uppercase;
              // word-break: break-all; 
            }

            .legend {
              a {
                color: inherit;
                font: inherit;
              }
            }

            .container {
              @include flex-direction(column);
              @include flex(1);

              padding: rem(15);
              
              .fieldset {
                @include flex-direction(column);
                @include flex(1);

                // opacity: 0.25 !important;

                .field {
                  margin: rem(5) rem(0);
                }

                .field:first-of-type {
                  margin-top: rem(0);
                }

                .field:last-of-type {
                  margin-bottom: rem(0);
                }
              }

              .fieldset:first-of-type {
                // opacity: 0.25 !important;

                .field {
                  margin: rem(7) rem(0);
                }

                .field:first-of-type {
                  margin-top: rem(0);
                }

                .field:last-of-type {
                  margin-bottom: rem(0);
                }
              }

              .association-groups, 
              .association-group {
                margin-bottom: rem(15);
              }

              .association-group:last-of-type {
                margin-bottom: 0;
              }
            }

            .message-container {
              background: repeating-linear-gradient(
                              -45deg,
                              $overriddenLightOdd,
                              $overriddenLightOdd rem(10),
                              $overriddenLightBand rem(10),
                              $overriddenLightBand rem(20)
                            );

              .message {
                background-color: $warningOdd;
                border-radius: rem(5);
                color: $dark;
                font: $bodyFontBold;
                font-size: rem(18);
                padding: rem(5) rem(10);
              }
            }

            .checkboxes-container {
              // @include flex-direction(row);
              
              max-height: rem(500);
              overflow-y: scroll;
              overflow-x: hidden;

              // Correction for inline element margins
              padding: rem(8);

              .checkbox-associations-group {
                @include flex-wrap(wrap);

                .field {
                  @include flex(1 0 15%);
                  min-width: rem(175);
                }
              }
            }

            .arrangeable-over {
              background-color: red;
            }

            .arrangeable {
              .figure-group {
                cursor: -webkit-grab;
                cursor:    -moz-grab;
                cursor:         grab;

                a, a:hover {
                  cursor: pointer;
                }

                &:active {
                  cursor: -webkit-grabbing;
                  cursor:    -moz-grabbing;
                  cursor:         grabbing;
                }
              }

              // This is a bit confusing as visually, the `.progenitor` is the element being moved, 
              // however, once it's dropped, the `.cloned` is actually placed and the `.progenitor`
              // snaps back to it's original position. 
              .progenitor {
                // opacity: 0.5 !important;
                // display: flex !important;

                .legend {
                  // background-color: red !important;
                }
              }

              // This is a bit confusing as visually, the `.progenitor` is the element being moved, 
              // however, once it's dropped, the `.cloned` is actually placed and the `.progenitor`
              // snaps back to it's original position. 
              .cloned {
                // opacity: 0.5 !important;
                // display: flex !important;

                // cursor: copy !important;

                .legend {
                  // background-color: blue !important;
                }
              }

              .disabled {
                .container {
                  .fieldset {
                    // background-color: #ccc;

                    .file-field {
                      opacity: 0.25;
                    }

                    .file-field:after {
                      // font-family: FontAwesome;
                      // content: "\f00d";
                      
                    }
                  }
                }
              }
            }

            .affiliations-container,
            .figures-container {
              @include flex-direction(row);
              @include flex-wrap(wrap);
            
              min-height: rem(140);
              padding: rem(5);

              .association-group,
              .association-group:last-of-type {
                @include align-items(stretch);
                margin: rem(10);

                > .container {
                  @include align-items(stretch);
                  padding: 0;

                  > .fieldset {
                    @include flex-direction(row);
                    @include align-items(stretch);

                    .file-field {
                      min-height: rem(100);
                    }

                    .field.editable {
                      @include align-items(stretch);
                      @include flex(1);

                      background-color: $neutral;
                      background-position: center;
                      background-repeat: no-repeat;
                      background-size: contain;
                      border-radius: 0;
                      min-width: rem(100);
                      padding: 0;

                      .field-content {
                        @include flex-direction(row);
                        @include justify-content(space-around);
                        @include align-items(stretch);
                        @include flex(1);

                        .value {
                          @include flex(1);

                          a {
                            @include justify-content(space-around);
                            @include align-items(center);
                            @include align-self(stretch);
                            @include flex(1);

                            &:hover {
                              text-decoration: none;
                            }
                          }
                        }

                        .value.missing {
                          border-radius: 0;

                          a {
                            @include flex-direction(column);
                            

                            span {
                              @include flex-direction(column);

                              background: repeating-linear-gradient(
                                -45deg,
                                $overriddenLightOdd,
                                $overriddenLightOdd rem(10),
                                $overriddenLightBand rem(10),
                                $overriddenLightBand rem(20)
                              );

                              border-color: $medium;
                              border-width: 0;
                              border-radius: 0;
                              color: $semiDark;
                              padding: 0 rem(5) rem(17) rem(5);

                              font: $bodyFontExtraBold;
                              font-size: rem(14);
                              letter-spacing: rem(0.2);
                              white-space: pre-line;

                              width: rem(100);
                              height: rem(98);

                              text-align: center;
                              text-transform: uppercase;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }

              .association-group.figure-group {
                > .container {
                  > .fieldset {
                    .file-field {
                      .field-content {
                        .title, .field_with_errors {
                          @include flex-direction(row);
                          @include align-items(stretch);
                          @include flex(1);

                          border-width: 0;
                          margin: 0;
                          padding: 0;

                          label {
                            @include flex(1);
                            opacity: 0;
                            background-color: $neutral;
                          }

                          .file-input {
                            @include justify-content(space-around);
                            @include align-items(center);
                            @include flex(1);

                            background-color: $neutral;
                            cursor: pointer;
                            color: $semiDark;
                            font-size: rem(35);
                            padding: rem(5) rem(7);
                            text-align: center;
                          }

                          .base10-admin-add-association {
                            background-color: $addFormBtnBackground;

                            &:hover {
                              background-color: $addFormBtnBackgroundRollover;
                              color: $neutral;
                              text-decoration: none;

                              -webkit-box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                                 -moz-box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                                      box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                            }
                          }



                          .file-input:after {
                            content: "\f093";
                            font-family: FontAwesome;
                          }
                        }

                        .title.untouched {
                          label {
                            opacity: 1;
                            // background-color: rgba(255, 255, 255, 1);
                          }

                          .base10-admin-add-association {
                            background-color: $addFormBtnBackground;

                            &:hover {
                              color: $neutral !important;
                              background-color: $addFormBtnBackgroundRollover;
                            }
                          }
                        }

                        .value {
                          display: none;

                          input[type="date"] {
                            width: rem(150);
                            min-width: rem(150);
                          }

                          input[type="file"] {
                            display: none;
                          }
                        }
                      }
                    }

                    .file-field:hover {
                      .field-content {
                        .title {
                          label {
                            opacity: 1;
                            background-color: rgba(255, 255, 255, 0.75);

                            &:hover {
                              background-color: rgba(111, 186, 118, 0.75);
                              color: $neutral;
                              text-decoration: none;
                              // opacity: 0.75;

                              -webkit-box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                                 -moz-box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                                      box-shadow: inset rem(0) rem(0) rem(10) rem(-5) rgba(0, 0, 0, 0.75);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

            .draggable {
              .association-group {
                cursor: pointer;
              }
            }

            .droppable {

            }

            .buttons, .controls {
              @include flex-direction(column);
              @include order(2);

              border-color: $mediumLight;
              border-width: 0 0 0 rem(2);
              min-width: rem(50);
              padding: 0;
            }
          }

          .association-groups,
          .association-group {
            .fieldset + .association-groups,
            .fieldset + .association-group {
              margin-top: rem(15);
            }
          }


          .association-groups {
            .association-group {
              background-color: $extraLight;
            }
          }

          .association-group {
            .table-container {
              padding: 0;

              .table {
                width: calc(100% + 1px);

                .tr {
                  .td {
                    .buttons, .controls {
                      @include flex-direction(row);

                      background-color: transparent;
                      border-width: 0;
                    }
                  }

                }

                // .thead {
                //   .tr {
                //     .th:first-of-type {
                //       border-radius: rem(5) 0 0 0;
                //     }

                //     .th:last-of-type {
                //       border-radius: 0 rem(5) 0 0;
                //     }
                //   }
                // }

                // .tbody {
                //   .tr:last-of-type {
                //     .td:first-of-type {
                //       border-radius: 0 0 0 rem(5);
                //     }

                //     .td:last-of-type {
                //       border-radius: 0 0 rem(5) 0;
                //     }
                //   }
                // }
              }
            }
          }

          .association-group.flat {
            border-width: 0;
            
            > .container {
              padding: 0;
            }
          }

          .association-group.flat:nth-of-type(odd) {
            > .container {
              > .fieldset {
                .field.editable {
                  background-color: $editableOdd;
                }
              }
            }
          }

          .association-group.flat:nth-of-type(even) {
            > .container {
              > .fieldset {
                .field.editable {
                  background-color: $editableEven;
                }
              }
            }
          }

          .nested-fields + .association-group {
            margin-top: rem(15);
          }

          // fieldset.dashed, .fieldset.dashed {
          //   border-color: #a3a3a3;
          //   border-radius: rem(5);
          //   border-style: dashed;
          //   border-width: rem(2);
          //   margin-bottom: rem(20);
          //   padding: rem(20) rem(20) 0 rem(20);

          //   // legend {
          //   //   font-weight: bold;
          //   //   font-size: rem(18);
          //   // }
          // }

          // .fieldset.singular,
          // .fieldset.multiple {
          //   .container {
          //     @include flex-direction(column);
          //     @include flex(1);
          //     margin: rem(5);

          //     .nested-fields {
          //       // @include flex-direction(column);
          //       // @include flex(1 1 auto);
          //     }
          //   }

          //   // .buttons {
          //   //   border-color: $medium;
          //   //   border-style: dotted;
          //   //   border-width: rem(1) 0 0 0;
          //   //   margin: rem(10) rem(10) 0 rem(10);
          //   //   padding: rem(15) 0 rem(9) 0;
          //   // }
          // }

          // .fieldset.multiple {
          //   .container {
          //     padding: rem(6) rem(4);

          //     .nested-fields {
          //       .fields {
          //         padding: 0;
          //       }

          //       .fields:first-of-type {
          //         .field {
          //           // margin: 0;
          //           // margin-bottom: 0;
          //         }
          //       }
          //     }
          //   }
          // }

          // .nested-set {
          //   .legend {
          //     border-style: dotted;
          //     border-width: 0 0 rem(1) 0;
          //     color: $dark;
          //     font: $headerFontLight;
          //   }

          //   .nest-group {

          //   }
          // }

          .cke-collection {
            @include flex-direction(column);

            .field-content {
              .title {

              }

              .value {
                @include flex(1);

                // CKEditor Specific Class
                .cke {
                  margin: 0;
                  padding: 0;
                  // width: calc(100% - rem(2));
                  width: 100%;
                  
                  border-width: 0;
                  box-shadow: none;

                  .cke_inner {
                    border-radius: rem(5);

                    .cke_top {
                      border-radius: rem(5) rem(5) 0 0;
                    }

                    .cke_bottom {
                      border-radius: 0 0 rem(5) rem(5);
                    }
                  }
                }
              }
            }
          }

          .field.editable,
          .stat.editable {
            // input, textarea, select {
            //   min-height: rem(30);
            // }

            input[type="file"],
            input[type="email"],
            input[type="number"],
            input[type="password"],
            input[type="search"],
            input[type="tel"],
            input[type="text"],
            input[type="url"],

            // Webkit & Gecko may change the display of these in the future
            input[type="color"],
            input[type="date"],
            input[type="datetime"],
            input[type="datetime-local"],
            input[type="month"],
            input[type="time"],
            input[type="week"],
            textarea,
            select,
            label.checkbox {
              background-color: $neutral;
              border-color: $editableOdd; 
              border-style: solid;
              border-width: rem(0);

              -webkit-border-radius: rem(5);
                 -moz-border-radius: rem(5);
                      border-radius: rem(5);

              color: $dark;
              font: $bodyFontSemiBold;
              height: rem(28);
              min-height: rem(28);
              min-width: rem(300);
              text-align: right;
            }

            input[type="email"],
            input[type="number"],
            input[type="password"],
            input[type="search"],
            input[type="tel"],
            input[type="text"],
            input[type="url"],

            // Webkit & Gecko may change the display of these in the future
            input[type="color"],
            input[type="date"],
            input[type="datetime"],
            input[type="datetime-local"],
            input[type="month"],
            input[type="time"],
            input[type="week"],
            textarea {
              -webkit-appearance: none;
                 -moz-appearance: none;
                      appearance: none;

              height: rem(15);
              padding: rem(4) rem(8);
            }

            input[type="email"],
            input[type="number"],
            input[type="password"],
            input[type="search"],
            input[type="tel"],
            input[type="text"],
            input[type="url"],

            // Webkit & Gecko may change the display of these in the future
            input[type="color"],
            input[type="date"],
            input[type="datetime"],
            input[type="datetime-local"],
            input[type="month"],
            input[type="time"],
            input[type="week"] {
              width: 30%;
            }

            textarea {
              font-size: rem(11);
              min-height: rem(100);
              min-width: rem(200);
            }

            select {
              padding: rem(20);
              // height: rem(30);
            }

            //Input must appear BEFORE label in code
            input[type="checkbox"] {
              width: rem(0);
              height: rem(0);
              display: none;
            }

            input[type="number"] {
              min-width: rem(85);
              text-align: right;
            }

            input.list {
              width: rem(150);
            }


            //============================================

            .title a,
            label {
              font-size: inherit;
              margin-bottom: 0;
              vertical-align: initial;
            }

            label.checkbox {
              cursor: pointer;
              color: transparent;
              position: relative;
              max-width: rem(28);
              min-width: rem(28);
              width: rem(28);
              display: block;

              -webkit-user-select: none; 
                 -moz-user-select: none; 
                  -ms-user-select: none;
                   -o-user-select: none; 
                      user-select: none;

            }

            textarea[disabled],
            textarea.disabled,
            label.checkbox.disabled,
            input[disabled],
            select[disabled] {
              filter: alpha(opacity=25);
              opacity: 0.25;
            }

            label.checkbox:after {
              background: transparent;
              color: $dark;
              content: '\f068';
              font-family: FontAwesome;
              font-size: rem(20);
              opacity: 0.35;

              position: absolute;
              left: rem(6);
              top: rem(5);
            }

            label.checkbox:hover::after {
              // -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
              // filter: alpha(opacity=50);
              left: rem(4);
              content: '\f00c';
              opacity: 0.5;
            }

            input[type="checkbox"]:checked + label:after {
              // -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
              // filter: alpha(opacity=100);
              left: rem(4);
              content: '\f00c';
              opacity: 1;
            }

            label.disabled:hover::after {
              opacity: 0 !important;
            }
          }
        }
      }
    }
  }
}